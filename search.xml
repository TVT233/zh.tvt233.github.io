<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你好！欢迎来到我的网站！</title>
    <url>/414d15ce29a6.html</url>
    <content><![CDATA[<h4 id="来看看这有什么"><a href="#来看看这有什么" class="headerlink" title="来看看这有什么"></a>来看看这有什么</h4><p>**<a href="https://zh.zihengzhang.top/about/">关于</a>**：在这你可以看到关于我的个人信息，教育和研究经历。如果你需要，里面还有我的个人简历和联系方式。</p>
<p>**<a href="https://zh.zihengzhang.top/research/">研究</a>**：在这你可以看到我之前做过的一些研究，以及我现在正在做的研究。</p>
<p>**<a href="https://zh.zihengzhang.top/applications/">应用</a>**：在这你可以找到我做过的一些应用方向的项目，展示视频以及相关理论介绍的论文。</p>
<h4 id="关于我的博客"><a href="#关于我的博客" class="headerlink" title="关于我的博客"></a>关于我的博客</h4><p>在未来，我会写一些博客来记录自己的学习和生活，你可以依靠<a href="https://zh.zihengzhang.top/tags/">标签</a> 和 <a href="https://zh.zihengzhang.top/categories/">分类</a> 来找到它们。</p>
]]></content>
  </entry>
  <entry>
    <title>Research Proposal的写作方式</title>
    <url>/77844727fb45.html</url>
    <content><![CDATA[<p>首先给大家提供一个爱丁堡大学的<a href="https://github.com/TVT233/personal-information/raw/main/How-to-Write-a-Good-Postgraduate-Research-Proposal.pdf">写作指导</a></p>
<h3 id="Research-Proposal-的黄金法则"><a href="#Research-Proposal-的黄金法则" class="headerlink" title="Research Proposal 的黄金法则"></a>Research Proposal 的黄金法则</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ol>
<li>目标明确、客观、简介且现实</li>
<li>问问自己为什么应该资助这项项目？为什么你是承担这个项目的最佳人选？</li>
<li>问问自己为什么这项研究很重要，很及时？</li>
<li>清楚地陈述和证明项目的目标的意义（仅仅有趣是不够的）</li>
<li>这项研究如何造福更广泛的群体？</li>
</ol>
<h4 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h4><ol>
<li>如果空间允许，请提供清晰的项目名称</li>
<li>使用章节题目</li>
<li>尽量分段，而不是把文本堆积在一起</li>
<li>尽量写短句，没人愿意在研究计划里分析长难句</li>
<li>如果允许，提供图表、图像来解释文本</li>
</ol>
<h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><ol>
<li>可以提前和潜在主管聊一聊（email），询问他们的想法</li>
<li>如果有机会，将自己的想法呈现一下，听取他们的意见</li>
<li>查看资助机构&#x2F;学校的具体要求，例如字数等</li>
</ol>
<h3 id="Research-Proposal-的文章结构"><a href="#Research-Proposal-的文章结构" class="headerlink" title="Research Proposal 的文章结构"></a>Research Proposal 的文章结构</h3><p>一般来说，要具体看机构的要求，这里只给出最普遍的结构供大家参考。在不同场景下（例如有字数限制），大家根据需求自行删改即可。</p>
<h4 id="常见的结构"><a href="#常见的结构" class="headerlink" title="常见的结构"></a>常见的结构</h4><ol>
<li>标题（<code>Title</code>)和摘要（<code>Abstract</code>）</li>
<li>背景（<code>Background Information</code>）&#x2F;  相关工作（<code>Related Work</code>）</li>
<li>假设（<code>Hypothesis</code>）和目标（<code>Objectives</code>）</li>
<li>研究方法（<code>Methodology</code>）</li>
<li>总结（<code>Summary</code>）&#x2F;  结论（<code>Conclusion</code>）</li>
</ol>
<h3 id="具体写作要求"><a href="#具体写作要求" class="headerlink" title="具体写作要求"></a>具体写作要求</h3><h4 id="学术诚信在先"><a href="#学术诚信在先" class="headerlink" title="学术诚信在先"></a>学术诚信在先</h4><p>先说一点比较重要的，在研究计划中提及的所有出版物都应该被标注引用，如果不这样做的话实际上是抄袭（<code>Plagiarism</code>）。即使你觉得作者的原话是对这个意思的最好阐述，你也最好用自己的话改写一下。如果必须要逐字引用，记得使用<strong>引号</strong>和<strong>斜体</strong>来标注。</p>
<h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><p>在摘要中，我们应该向读者表达清楚自己研究计划的要点和结论。整体风格应该和全文一致。</p>
<h4 id="背景-x2F-相关工作"><a href="#背景-x2F-相关工作" class="headerlink" title="背景&#x2F;相关工作"></a>背景&#x2F;相关工作</h4><p>在这里，我们应该首先向读者以文献综述的形式介绍背景信息，尽快引起将读者的思绪带入情景之中。之后清楚地阐明自己研究的有效性和必要性，说明研究的目的和目标。</p>
<p>值得说明的一点是，这种有效性只要是基于合理的假设和推理即可，不必非要说得很夸张。</p>
<p>之后可以介绍本方向之前的一些工作，并探讨它们的不足，证明自己对于此研究所属领域的背景、方法、理论和矛盾点都有着很好的了解。</p>
<h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><h5 id="假设和目标"><a href="#假设和目标" class="headerlink" title="假设和目标"></a>假设和目标</h5><p>我们在此部分可以详实地阐述自己研究所基于的假设和期望的目标。值得注意的是，目标不必过于夸大，可行永远是目标的第一要素，在此基础上则可以进行扩展。</p>
<p>在描述的过程中，你可以通过向自己提问的方式来找出需要补充的要素：</p>
<ol>
<li>为什么其他人应该为我的研究投入资金？</li>
<li>我的研究最终的受益群体是谁？最好说的具体一点，让世界受益的研究听起来太模糊了。</li>
<li>是否有证据，比如文献或数据，证明这项研究的成果将填补某项空白，或者可以很好的应用于现在的体系之上？</li>
<li>这项研究是否够及时，有创新，响应大的行业趋势？</li>
<li>其实你也可以写上具体的日程目标，比如每6个月的时间计划。</li>
</ol>
<h5 id="研究方法"><a href="#研究方法" class="headerlink" title="研究方法"></a>研究方法</h5><p>研究方法可以说是最为重要的部分。</p>
<ol>
<li>自己使用的研究方法做出简要的介绍</li>
<li>解释为什么你认为它是最为合适的研究方法</li>
<li>考虑了哪些替代方法</li>
<li>为什么没有使用这些替代方法（反向证明自己方法的合理性）</li>
<li>为什么你选择的这个研究场所适合你的这套研究方法（比如提供专业知识，数据，设备等）</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>在<code>Research Proposal</code>的结尾写好总结可以帮助审阅的人识别重要信息，毕竟大家都爱看摘要和总结。总结的方式有很多种，但大体上来说都是对自己的研究的完整概括：使用什么方法，解决了什么问题，提升了哪些性能，使得哪些人受益等等。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>申请</tag>
        <tag>研究</tag>
      </tags>
  </entry>
  <entry>
    <title>GRE Analysing Writing 总结——部分主题思路</title>
    <url>/cb6183d6dc95.html</url>
    <content><![CDATA[<h3 id="Assumption类指令题目"><a href="#Assumption类指令题目" class="headerlink" title="Assumption类指令题目"></a>Assumption类指令题目</h3><h4 id="Driver’s-education"><a href="#Driver’s-education" class="headerlink" title="Driver’s education"></a>Driver’s education</h4><p>The following appeared in a letter to the school board in the town of Centerville. </p>
<p>“All students should be required to take the driver’s education course at Centerville High School. In the past two years, several accidents in and around Centerville have involved teenage drivers. Since a number of parents in Centerville have complained that they are too busy to teach their teenagers to drive, some other instruction is necessary to ensure that these teenagers are safe drivers. Although there are two driving schools in Centerville, parents on a tight budget cannot afford to pay for driving instruction. Therefore an effective and mandatory program sponsored by the high school is the only solution to this serious problem.” </p>
<p>Write a response in which you examine the stated and&#x2F;or unstated assumptions of the argument. Be sure to explain how the argument depends on these assumptions and what the implications are for the argument if the assumptions prove unwarranted.</p>
<p><img src="/cb6183d6dc95/Driver's-education.png"></p>
<p>思路：</p>
<ol>
<li>C地若干起事故涉及青年司机，具体数量和比例？司机是否占主要责任？青年司机是否是本地青年？</li>
<li>没空，没钱的家长的比例？政府出资是否可以？</li>
<li>【结果向】由于是强制性，学生与家长是否愿意参加？学校是否有财力承办？</li>
</ol>
<h4 id="UltraClean"><a href="#UltraClean" class="headerlink" title="UltraClean"></a>UltraClean</h4><p>The following appeared in a memo from the director of a large group of hospitals. </p>
<p>“In a laboratory study of liquid antibacterial hand soaps, a concentrated solution of UltraClean produced a 40 percent greater reduction in the bacteria population than did the liquid hand soaps currently used in our hospitals. During a subsequent test of UltraClean at our hospital in Workby, that hospital reported significantly fewer cases of patient infection than did any of the other hospitals in our group. Therefore, to prevent serious patient infections, we should supply UltraClean at all hand-washing stations throughout our hospital system.” </p>
<p>Write a response in which you examine the stated and&#x2F;or unstated assumptions of the argument. Be sure to explain how the argument depends on these assumptions and what the implications are for the argument if the assumptions prove unwarranted.</p>
<p><img src="/cb6183d6dc95/UltraClean.png"></p>
<p>思路：</p>
<ol>
<li>浓缩溶液效果好，不代表未浓缩溶液效果也好。</li>
<li>医院感染病例少未必是因为UC，可能本身医院就小，或者医院素质高等</li>
<li>即使上述假设为真，能抗菌抗普通感染的UC未必能抗严重感染（serious patient infections）。</li>
</ol>
<h4 id="Homework"><a href="#Homework" class="headerlink" title="Homework"></a>Homework</h4><p>While the Department of Education in the state of Attra recommends that high school students be assigned homework every day, the data from a recent statewide survey of high school math and science teachers give us reason to question the usefulness of daily homework. In the district of Sanlee, 86 percent of the teachers reported assigning homework three to five times a week, whereas in the district of Marlee, less than 25 percent of the teachers reported assigning homework three to five times a week. Yet the students in Marlee earn better grades overall and are less likely to be required to repeat a year of school than are the students in Sanlee. Therefore, all teachers in our high schools should assign homework no more than twice a week.</p>
<p>Write a response in which you examine the stated and&#x2F;or unstated assumptions of the argument. Be sure to explain how the argument depends on these assumptions and what the implications are for the argument if the assumptions prove unwarranted.</p>
<p><img src="/cb6183d6dc95/Homework.png"></p>
<p>思路：这道题的破题点在于要找到两个作者暗示的推论，丰富文章的结构。</p>
<ol>
<li>S地区布置作业次数多，未必花的时间就多。</li>
<li>M地区学生分数高，重读少未必就是水平高，有可能是评价标准宽松</li>
<li>就算二者成立，也未必是作业次数少导致的水平高，可能是教育基础设施好等等因素。</li>
</ol>
<h4 id="Sleeping-time"><a href="#Sleeping-time" class="headerlink" title="Sleeping time"></a>Sleeping time</h4><p>The following appeared as part of an article in a business magazine. </p>
<p>“A recent study rating 300 male and female advertising executives according to the average number of hours they sleep per night showed an association between the amount of sleep the executives need and the success of their firms. Of the advertising firms studied, those whose executives <strong>reported</strong> needing no more than six hours of sleep per night had higher profit margins and faster growth. On the 39 basis of this study, we recommend that businesses hire only people who need less than six hours of sleep per night.” </p>
<p>Write a response in which you discuss what questions would need to be answered in order to decide whether the recommendation and the argument on which it is based are reasonable. Be sure to explain how the answers to these questions would help to evaluate the recommendation.</p>
<p><img src="/cb6183d6dc95/Sleeping-time.png"></p>
<p>要点：这题出现了个常见的词<code>report</code>，一般看见这个词就要考虑一下结果的真实性，即这些经理是不是没说实话。</p>
<p>思路：</p>
<ol>
<li>经理说自己需要不到6小时睡眠，未必是真的。</li>
<li>如果睡得更久，也可能又更好的表现。</li>
<li>公司的业绩好未必是经理一个人的功劳，没准是这些公司的员工能力更强</li>
<li>广告公司适合找睡眠不到6小时的经理，其他公司未必。</li>
</ol>
<h4 id="Helmets"><a href="#Helmets" class="headerlink" title="Helmets"></a>Helmets</h4><p>The following appeared in a health newsletter. </p>
<p>“A ten-year nationwide study of the effectiveness of wearing a helmet while bicycling indicates that ten years ago, approximately 35 percent of all bicyclists reported wearing helmets, whereas today that number is nearly 80 percent. Another study, however, suggests that during the same ten-year period, the number of bicycle-related accidents has increased 200 percent. These results demonstrate that bicyclists feel safer because they are wearing helmets, and they take more risks as a result. Thus, to reduce the number of serious injuries from bicycle accidents, the government should concentrate more on educating people about bicycle safety and less on encouraging or requiring bicyclists to wear helmets.” </p>
<p>Write a response in which you examine the stated and&#x2F;or unstated assumptions of the argument. Be sure to explain how the argument depends on these assumptions and what the implications are for the argument if the assumptions prove unwarranted.</p>
<p><img src="/cb6183d6dc95/Helmets.png"></p>
<p>思路：</p>
<ol>
<li>经典<strong>reported</strong>，宣称了未必真的提升了。</li>
<li>自行车事故数量提升200%，但事故率未必上升了，可能只是总数上升了。</li>
<li>就算前面成立了，也未必是因为人们觉得安全所以愿意冒险。</li>
<li>就算前面成立了，不戴头盔可能更不安全，而安全教育未必能起到保护作用。</li>
</ol>
<h3 id="Evidence类指令"><a href="#Evidence类指令" class="headerlink" title="Evidence类指令"></a>Evidence类指令</h3><h4 id="Jazz-club"><a href="#Jazz-club" class="headerlink" title="Jazz club"></a>Jazz club</h4><p>The following was written as a part of an application for a small-business loan by a group of developers in the city of Monroe. </p>
<p>“A jazz music club in Monroe would be a tremendously profitable enterprise. Currently, the nearest jazz club is 65 miles away; thus, the proposed new jazz club in Monroe, the C-Note, would have the local market all to itself. Plus, jazz is extremely popular in Monroe: over 100,000 people attended Monroe’s annual jazz festival last summer; several well-known jazz musicians live in Monroe; and the highest-rated radio program in Monroe is ‘Jazz Nightly,’ which airs every weeknight at 7 P.M. Finally, a nationwide study indicates that the typical jazz fan spends close to $1,000 per year on jazz entertainment.” </p>
<p>Write a response in which you discuss what specific evidence is needed to evaluate the argument and explain how the evidence would weaken or strengthen the argument.</p>
<p><img src="/cb6183d6dc95/Jazz.png"></p>
<p>思路：</p>
<ol>
<li>最近的俱乐部在65公里外未必有市场，需要证明新俱乐部确实能吸引当地消费者。毕竟可能人家开车也不觉得65公里很远。</li>
<li>在当地爵士乐是否真的很受欢迎？当地有多少人？名人定居的原因？电台在周末的吸引力？这些都需要相关的证据。</li>
<li>全国的结论是否适用于本地？粉丝花钱是不是花在了俱乐部以外的爵士乐方面？都需要证据佐证。</li>
<li>即使这些都考虑到了，有了市场，还有其他因素需要被佐证，比如成本，政策等因素。</li>
</ol>
<h4 id="Woven-baskets"><a href="#Woven-baskets" class="headerlink" title="Woven baskets"></a>Woven baskets</h4><p>Woven baskets characterized by a particular distinctive pattern have previously been found only in the immediate vicinity of the prehistoric village of Palea and therefore were believed to have been made only by the Palean people. Recently, however, archaeologists discovered such a “Palean” basket in Lithos, an ancient village across the Brim River from Palea. The Brim River is very deep and broad, and so the ancient Paleans could have crossed it only by boat, and no Palean boats have been found. Thus it follows that the so-called Palean baskets were not uniquely Palean. </p>
<p>Write a response in which you discuss what specific evidence is needed to evaluate the argument and explain how the evidence would weaken or strengthen the argument.</p>
<p><img src="/cb6183d6dc95/Woven-basket.png"></p>
<p>思路：</p>
<ol>
<li>Brim河现在很宽很深，可能过去压根就不存在，或者过去是一条小河。</li>
<li>没有发现Palean船不代表没有，可能是没有被保存下来。</li>
<li>即使都成立，也可能这种篮子通过其他方式从P地到达L地。</li>
</ol>
<h4 id="A-amp-Z-Building"><a href="#A-amp-Z-Building" class="headerlink" title="A&amp;Z Building"></a>A&amp;Z Building</h4><p>The following appeared in a memo from a vice president of a large, highly diversified company. </p>
<p>“Ten years ago our company had two new office buildings constructed as regional headquarters for two regions. The buildings were erected by different construction companies — Alpha and Zeta. Although the two buildings had identical floor plans, the building constructed by Zeta cost 30 percent more to build. However, that building’s expenses for maintenance last year were only half those of Alpha’s. Furthermore, the energy consumption of the Zeta building has been lower than that of the Alpha building every year since its construction. Such data indicate that we should use Zeta rather than Alpha for our contemplated new building project, even though Alpha’s bid promises lower construction costs.” </p>
<p>Write a response in which you discuss what specific evidence is needed to evaluate the argument and explain how the evidence would weaken or strengthen the argument.</p>
<p><img src="/cb6183d6dc95/A&Z-Building.png"></p>
<p><strong>这题改过，去掉了一句“Z公司人员流动性更少”</strong></p>
<p>A花钱比Z少这件事，是对结论不利的条件，我们在这里主要找为了使结论成立还需要哪些证据，因此这件事提一句带过即可，不必围绕展开。</p>
<p>思路：</p>
<ol>
<li>Z公司造的楼维护费用少未必是因为他建造的楼划算，可能是因为A那一栋楼所处的位置损害多，或者使用的程度深，甚至那个地方人工物料成本高等等因素</li>
<li>Z公司的楼能源消耗少未必说明Z造的楼能耗方面更省钱，可能是那栋楼的人更少，或者A那一栋楼所处的地方气候恶劣，能源消耗大等</li>
<li>即便上述假设成立，也未必要聘请Z完成新项目，例如其他的指出方向没考虑，A公司这几年是否有技术更新等等</li>
</ol>
<h4 id="Fish-amp-cold"><a href="#Fish-amp-cold" class="headerlink" title="Fish &amp; cold"></a>Fish &amp; cold</h4><p>The following report appeared in the newsletter of the West Meria Public Health Council. </p>
<p>“An innovative treatment has come to our attention that promises to significantly reduce absenteeism in our schools and workplaces. A study reports that in nearby East Meria, where fish consumption is very high, people visit the doctor only once or twice per year for the treatment of colds. Clearly, eating a substantial amount of fish can prevent colds. Since colds represent the most frequently given reason for absences from school and work, we recommend the daily use of Ichthaid — a nutritional supplement derived from fish oil — as a good way to prevent colds and lower absenteeism.” </p>
<p>Write a response in which you discuss what specific evidence is needed to evaluate the argument and explain how the evidence would weaken or strengthen the argument.</p>
<p><img src="/cb6183d6dc95/Fish-&-cold.png"></p>
<p>思路：</p>
<ol>
<li>EM鱼肉消耗量多未必是被人吃了，可能有其他用途比如生产鱼肉罐头。</li>
<li>EM的人每年看感冒一两次，可能是气候等因素不易感冒或者有病不愿意看。</li>
<li>感冒是否真的是上学上班最常见的理由？</li>
<li>即使上述论断成立，Ichthaid也不一定能像鱼肉一样预防感冒。</li>
</ol>
<h3 id="Explanation类指令"><a href="#Explanation类指令" class="headerlink" title="Explanation类指令"></a>Explanation类指令</h3><h4 id="Relaxed-pace-of-life"><a href="#Relaxed-pace-of-life" class="headerlink" title="Relaxed pace of life"></a>Relaxed pace of life</h4><p>Workers in the small town of Leeville take fewer sick days than workers in the large city of Masonton, 50 miles away. Moreover, relative to population size, the diagnosis of stress-related illness is proportionally much lower in Leeville than in Masonton. According to the Leeville Chamber of Commerce, these facts can be attributed to the health benefits of the relatively relaxed pace of life in Leeville. </p>
<p>Write a response in which you discuss one or more alternative explanations that could rival the proposed explanation and explain how your explanation(s) can plausibly account for the facts presented in the argument.</p>
<p><img src="/cb6183d6dc95/Relaxed-pace-of-life.png"></p>
<p>思路：</p>
<ol>
<li>请假更少的原因可能是请假制度不完善，请不下来所以就不愿意请了。</li>
<li>诊断出压力相关疾病少可能是因为L地医疗资源落后，查不出来。</li>
<li>即使L地的人确实身心健康，也可能是因为收入高，食品安全等因素，而非生活节奏缓慢。</li>
</ol>
<h3 id="Question类指令"><a href="#Question类指令" class="headerlink" title="Question类指令"></a>Question类指令</h3><h4 id="Consolidated-Industries"><a href="#Consolidated-Industries" class="headerlink" title="Consolidated Industries"></a>Consolidated Industries</h4><p>The following appeared in a letter from a firm providing investment advice to a client. </p>
<p>“Homes in the northeastern United States, where winters are typically cold, have traditionally used oil as their major fuel for heating. Last year that region experienced twenty days with below-average temperatures, and local weather forecasters throughout the region predict that this weather pattern will continue for several more years. Furthermore, many new homes have been built in this region during the past year. Based on these developments, we predict a large increase in the demand for heating oil. Therefore, we recommend investment in Consolidated Industries, one of whose major business operations is the retail sale of home heating oil.” </p>
<p>Write a response in which you discuss what questions would need to be answered in order to decide whether the recommendation and the argument on which it is based are reasonable. Be sure to explain how the answers to these questions would help to evaluate the recommendation.</p>
<p><img src="/cb6183d6dc95/Consolidated-Industries.png"></p>
<p>思路：</p>
<ol>
<li>气象预报真的是准确的吗？</li>
<li>人们真的会因为有新建房屋而不搬走吗？</li>
<li>燃油在未来不会被新能源取代吗？</li>
<li>即使上述假设成立，C公司是否有其他方面因素需要考虑，例如信誉问题等。</li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>GRE</tag>
      </tags>
  </entry>
  <entry>
    <title>GRE Analysing Writing 总结——指令篇</title>
    <url>/8296d351526e.html</url>
    <content><![CDATA[<p><a href="https://www.ets.org/content/dam/ets-org/pdfs/gre/issue-pool.pdf">Issue官方题库</a>   <a href="https://www.ets.org/content/dam/ets-org/pdfs/gre/argument-pool.pdf">Argument官方题库</a></p>
<p>最近考了GRE，准备将自己的学习成果记录下来。一来帮助自己梳理脉络，二来给后面有需要的人临时抱抱佛脚。诸君自己斟酌着参考即可。</p>
<p>我喜欢在这里把<code>Instruction</code>译作<code>指令</code>，因为不听它的真的会完蛋。</p>
<p><strong>前提：ETS对我们行文所采取的立场并不看重！</strong></p>
<h3 id="Issue类指令"><a href="#Issue类指令" class="headerlink" title="Issue类指令"></a>Issue类指令</h3><h4 id="是非判断类"><a href="#是非判断类" class="headerlink" title="是非判断类"></a>是非判断类</h4><p>Write a response in which you discuss the extent to which you agree or disagree with the statement and explain your reasoning for the position you take. In developing and supporting your position, you should consider ways in which the statement might or might not hold true and explain how these considerations shape your position.</p>
<p>这种<code>Instruction</code>对我们的行文和立场没有影响，extend一词可以理解为既可以<code>100%</code>同意某观点，也可以<code>50%</code>同意某观点。</p>
<h4 id="因果类"><a href="#因果类" class="headerlink" title="因果类"></a>因果类</h4><p>Write a response in which you discuss the extent to which you agree or disagree with the claim and the reason on which that claim is based.</p>
<p>在这种<code>Instruction</code>中，我们要谈及两方面内容，一是题目中得结论<code>claim</code>，二是题目中支持结论成立得原因<code>reason</code>。</p>
<p>值得注意的一点是，我们除了上述二者，还应该对原因到结论的推理过程加以审视。例如：即使原因成立，它也未必是构成该结论的所有原因，即其他原因也有可能退出该结论。</p>
<h4 id="两种看法类"><a href="#两种看法类" class="headerlink" title="两种看法类"></a>两种看法类</h4><p>Write a response in which you discuss which view more closely aligns with your own position and explain your reasoning for the position you take. In developing and supporting your position, you should address both of the views presented.</p>
<p>这种<code>Instruction</code>的题目会包含两种观点，大部分情况下两者在表面上是相互排斥的，但本质上有可能是不矛盾的，这点需要被重视。行文中<strong>两种观点必须都要兼顾</strong>，注意事项有二：</p>
<p>一、题目中虽有<code>more closely</code>一词，但我们行文中完全可以说<code>两种观点与我们的立场一样接近</code>。这一点并不违背指令，还是那句话，<strong>我们的立场并不重要</strong>。</p>
<p>二、并不一定全文同时带着两种观点走，可以两段讨论一个。一段讨论另一个。</p>
<p>最常见的写法是：一段写观点A，一段写观点B，一段写A与B之间的关系。</p>
<h4 id="敌方看法类"><a href="#敌方看法类" class="headerlink" title="敌方看法类"></a>敌方看法类</h4><p>Write a response in which you discuss the extent to which you agree or disagree with the claim. In developing and supporting your position, be sure to address the most compelling reasons and&#x2F;or examples that could be used to challenge your position.</p>
<p>这种<code>Instruction</code>要兼顾两个内容，<code>我们的观点</code>和<code>敌方观点的理由/例子</code>。敌方的观点是有我们的观点取反所决定的。</p>
<p>注意事项有二：</p>
<p>一、要针对一种敌方看法展开一段论证。<strong>一段就够，但至少要有一段。</strong></p>
<p>二、讨论敌方观点时，并不一定要反对它，可以做让步承认其合理性，可以辩证思考，既同意又反对，可以从本质上判断敌我观点是否矛盾等等。不要对敌方观点草率地做出评价，要先分析，对方为什么反对，出发点和依据又是什么。</p>
<p>常用的敌方观点段落思维模板是<code>敌方看法+我对敌方看法的分析+我对敌方看法的评价</code></p>
<h4 id="建议类（一）"><a href="#建议类（一）" class="headerlink" title="建议类（一）"></a>建议类（一）</h4><p>Write a response in which you discuss the extent to which you agree or disagree with the recommendation and explain your reasoning for the position you take. In developing and supporting your position, describe specific circumstances in which adopting the recommendation would or would not be advantageous and explain how these examples shape your position.</p>
<p>这种<code>Instruction</code>对应的题目往往是一条建议，我们不仅需要给出我们的立场和理由，还要描述这条建议什么时候有利advantageous，什么时候不利no<code>t advantageous</code>。</p>
<p>这个有利和不利是针对于建议所造成的结果来说的，因此这篇文章的讨论和分析一定是围绕建议所产生的结果，如果偏离了这个范畴就不能满足指令要求。</p>
<h4 id="建议类（二）"><a href="#建议类（二）" class="headerlink" title="建议类（二）"></a>建议类（二）</h4><p>Write a response in which you discuss your views on the policy and explain your reasoning for the position you take. In developing and supporting your position, you should consider the possible consequences of implementing the policy and explain how these consequences shape your position.</p>
<p>这种<code>Instruction</code>对应的题目往往是一条政策，与建议所不同的是，政策显得更加强硬，主题是国家、政府、学校等。</p>
<p>不过我们的应对方式同建议类（一）是一致的，唯一需要注意的区别在于，（一）需要我们阐述不同结果产生的情况<code>specific circumstances</code>，而（二）不许要。</p>
<h3 id="Argument类指令"><a href="#Argument类指令" class="headerlink" title="Argument类指令"></a>Argument类指令</h3><p>解题流程：</p>
<ol>
<li>通读文章，定位论据和结论</li>
<li>依据论据和结论，再现原<code>Argument</code>的推理过程</li>
<li>按照<code>Instruction</code>对原<code>Argument</code>进行分析</li>
</ol>
<p><code>Argument</code>类指令分为四类：<code>Assumption</code>，<code>Evidence</code>，<code>Explanation</code>，<code>Question</code>。</p>
<h4 id="Assumption类指令"><a href="#Assumption类指令" class="headerlink" title="Assumption类指令"></a>Assumption类指令</h4><p>Write a response in which you examine the stated and&#x2F;or unstated assumptions of the argument. Be sure to explain how the argument depends on these assumptions and what the implications are for the argument if the assumptions prove unwarranted.</p>
<p>什么是<code>Assumption</code>？<code>Assumption</code>可以理解为<code>poorly supported claim</code>，即没有被很好地支持的论断，可以是被作者明确提到的（<code>stated</code>），也可以是没有明确提到的（<code>unstated</code>）。</p>
<p>逻辑上的结构是这样的：<code>Assumption</code> &#x3D;&gt; 分论点&#x2F;论断 &#x3D;&gt; 结论</p>
<p><strong>我们要做的事情</strong>就是：找到这样的<code>Assumption</code>，指出其不成立的情况，并且说明这些<code>Assumption</code>一旦不成立，作者的最终结论会如何被削弱。</p>
<p>那么行文要写几个中间段呢？我的理解是：作者做了几次推导，就写几个中间段。如果作者用了一个<code>Assumption</code>做了一次推导，推出了一个分论点，那么这一个<code>Assumption</code>就可以成为一个中间段；而如果作者用了三个<code>Assumption</code>推出了一个分论点，那么这三个<code>Assumption</code>就可以合并为一段。</p>
<p>具体到每一段应该如何写：</p>
<ol>
<li>找出原文中各论断或结论所依赖的<code>Assumption</code></li>
<li>指出这些<code>Assumption</code>在什么情况下不成立</li>
<li>阐明这些<code>Assumption</code>一旦不成立，作者的结论就会被削弱</li>
</ol>
<h4 id="Evidence类指令"><a href="#Evidence类指令" class="headerlink" title="Evidence类指令"></a>Evidence类指令</h4><p>Write a response in which you discuss what specific evidence is needed to evaluate the argument and explain how the evidence would weaken or strengthen the argument.</p>
<p>在这种类型的题目中，我们无法确定其中一些<code>Assumption</code>是否成立，因为缺失了重要的证据。于是我们就<strong>不能贸然评价</strong>原<code>Argument</code>是否成立（<code>wrong</code>，<code>unconvincing</code>，flawed），否则就偏离了指令的要求。</p>
<p><strong>我们要做的事情</strong>就是：提供新的具体的证据（<code>specific evidence</code>）来完善推理过程。有了新的证据，就可以对结论做出评价，这种评价可能是正面加强结论（<code>strengthen</code>），也可使负面削弱结论（<code>weaken</code>）</p>
<p>具体到每一段应该如何写：</p>
<ol>
<li>指出我们现在还无法评价作者的某一个论断</li>
<li>说明为了更好地评价这一论断，我们还需要什么样的新证据</li>
<li>用新证据削弱或者增强作者的这一论断</li>
</ol>
<h4 id="Explanation类指令"><a href="#Explanation类指令" class="headerlink" title="Explanation类指令"></a>Explanation类指令</h4><p>Write a response in which you discuss one or more alternative explanations that could rival the proposed explanation and explain how your explanation(s) can plausibly account for the facts presented in the argument.</p>
<p>这种指令对应的题目一般都会阐述一个现象或者事实，然后对这个现象或事实给出一个解释。指令要求我们给出其他的解释，并说明这些解释如何说明文章中的现象或事实。</p>
<p><strong>我们要做的事情</strong>就是：对于每一个分论点所包含的现象或事实，给出一个有别于这个分论点的新解释，而后做出让步：即使分论点成立，也可能是因为其他原因而非原<code>Argument</code>中的结论。</p>
<p>具体到每一段应该如何写：</p>
<ol>
<li>复述作者对题目中现象的解释，指出其解释不唯一</li>
<li>给出其他解释并详细说明</li>
</ol>
<h4 id="Question类指令"><a href="#Question类指令" class="headerlink" title="Question类指令"></a>Question类指令</h4><p>Write a response in which you discuss what questions would need to be answered in order to decide whether the recommendation and the argument on which it is based are reasonable. Be sure to explain how the answers to these questions would help to evaluate the recommendation.</p>
<p>其实这类指令和<code>Assumption</code>类没有本质的区别，只不过我们评价的方式变成了问问题而已。</p>
<p><strong>我们要做的事情</strong>可以参考<code>Assumption</code>类，将<code>Assumption</code>变为对应的提问来评价即可。</p>
<p>具体到每一段应该如何写：</p>
<ol>
<li>指出我们现在还无法评价原<code>Argument</code>中的某一论断</li>
<li>说明为了更好地评价这一建议，我们还需要问什么样的问题</li>
<li>给出问题的答案并用答案来评价题目中的建议（可以是正面的，也可以是负面的）</li>
</ol>
<hr>
<p>参考文献：GRE写作高频题目及考点精析 黑皮书</p>
<p><img src="/8296d351526e/GRE%E5%86%99%E4%BD%9C%E9%AB%98%E9%A2%91%E9%A2%98%E7%9B%AE%E5%8F%8A%E8%80%83%E7%82%B9%E7%B2%BE%E6%9E%90.jpg" alt="GRE写作高频题目及考点精析"></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>GRE</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（四）</title>
    <url>/2c0f12af2268.html</url>
    <content><![CDATA[<p>书接<a href="http://zh.zihengzhang.top/bbb012e90cee.html">上文</a>，今天继续介绍一些博客装饰内容。</p>
<h3 id="Pjax-优化"><a href="#Pjax-优化" class="headerlink" title="Pjax 优化"></a>Pjax 优化</h3><p><code>pjax</code>是一款基于<code>jQuery</code>的插件，基于<code>pushState</code>和<code>ajax</code>，实现站点的局部刷新。它将站点转化为<code>SPA</code>应用，可以提升页面切换速度。同时它可以解决<code>aplayer</code>插件切换页面后重新播放的问题。</p>
<p>我们在根目录终端依次键入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-pjax <span class="built_in">source</span>/lib/pjax</span><br><span class="line"><span class="built_in">cd</span> ../..</span><br></pre></td></tr></table></figure>

<h3 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h3><p>标签云插件<code>hexo-tag-cloud</code>实现了较为炫酷的标签环绕效果，可以自定义标签云的字体、颜色、高亮显示。</p>
<p>我们在终端键入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure>

<p>进入路径<code>themes/next/layout/_macro/sidebar.swig</code>，然后找到<code>&lt;div class=&quot;site-overview-wrap sidebar-panel&quot;&gt;</code>，在该标签的后面添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  charset=&quot;utf-8&quot;</span><br><span class="line">  src=&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;</span><br><span class="line">&gt;&lt;/script&gt;</span><br><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  charset=&quot;utf-8&quot;</span><br><span class="line">  src=&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;</span><br><span class="line">&gt;&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">  &lt;h5 class=&quot;widget-title&quot;&gt;标签云&lt;/h5&gt;</span><br><span class="line">  &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot;&gt;</span><br><span class="line">    &lt;canvas width=&quot;250&quot; height=&quot;250&quot; id=&quot;resCanvas&quot; style=&quot;width:100%&quot;&gt;</span><br><span class="line">      &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">    &lt;/canvas&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>具体位置如图所示：</p>
<p><img src="/2c0f12af2268/%E4%BD%8D%E7%BD%AE.png"></p>
<p>之后，进入项目根目录<code>blog</code>，打开站点配置文件<code>_config.yml</code>，找个空地添加以下代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">标签云</span></span><br><span class="line">tag_cloud:</span><br><span class="line">  textFont: Trebuchet MS, Helvetica # 字体</span><br><span class="line">  textColor: &quot;#333&quot; # 字体颜色</span><br><span class="line">  textHeight: 20 # 字体大小</span><br><span class="line">  outlineColor: &quot;#E2E1D1&quot;</span><br><span class="line">  maxSpeed: 0.2 # 旋转速度</span><br><span class="line">  pauseOnSelected: true # 当选中对应标签时，是否停止转动</span><br></pre></td></tr></table></figure>

<h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>进入路径<code>themes/next/_config.yml</code>，修改主题配置文件的<code>custom_file_path</code>字段，将<code>style</code>的注释取消：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line">custom_file_path:</span><br><span class="line">  style: <span class="built_in">source</span>/_data/styles.styl</span><br></pre></td></tr></table></figure>

<p>在<code>blog/source</code>下新建一个<code>_data</code>文件夹，文件夹中新建一个<code>styles.styl</code>文件（不用<code>VScode</code>的同学，可以新建一个<code>styles.txt</code>，再更改它的后缀）。在上面编辑以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">code</span> &#123;</span><br><span class="line">  <span class="attr">color:</span> <span class="comment">#ff7600;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="comment">#fbf7f8;</span></span><br><span class="line">  <span class="attr">margin:</span> <span class="string">2px;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.highlight,</span></span><br><span class="line"><span class="string">pre</span> &#123;</span><br><span class="line">  <span class="attr">margin:</span> <span class="string">5px</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">  <span class="attr">padding:</span> <span class="string">5px;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.highlight,</span></span><br><span class="line"><span class="string">code,</span></span><br><span class="line"><span class="string">pre</span> &#123;</span><br><span class="line">  <span class="attr">border:</span> <span class="string">1px</span> <span class="string">solid</span> <span class="comment">#d6d6d6;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="代码块高亮"><a href="#代码块高亮" class="headerlink" title="代码块高亮"></a>代码块高亮</h3><p>进入路径<code>themes/next/_config.yml</code>，修改主题配置文件的<code>codeblock</code>字段：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">bright</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span></span><br></pre></td></tr></table></figure>

<p><code>codeblock</code>字段会更改代码块的主题样式，感兴趣的同学不妨都尝试一下，找到自己喜欢的风格。</p>
]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>种子文件与磁力链接及其下载方式</title>
    <url>/2b7de3448214.html</url>
    <content><![CDATA[<p>最近，室友总是问我关于种子文件和磁力链接的概念问题。好像我很了解这些一样，今天索性写一篇帖子介绍一下我对这两种下载方式的理解。</p>
<h3 id="中心化下载与非中心化下载"><a href="#中心化下载与非中心化下载" class="headerlink" title="中心化下载与非中心化下载"></a>中心化下载与非中心化下载</h3><h4 id="中心化下载"><a href="#中心化下载" class="headerlink" title="中心化下载"></a>中心化下载</h4><p>中心化下载是我们最常接触到的下载模式，常见的<code>HTTP下载</code>，<code>FTP下载</code>都是中心化下载模式的具体方式。顾名思义，这种下载存在着一个中心，也就是存储资源的服务器。当你作为一个客户端向服务器请求下载时，服务器就会向你传输信息。而当很多人一起请求下载时，服务器也就成为了这个网络的<strong>中心</strong>。</p>
<p>但这样的下载方式有一个很明显的缺陷，当同时下载的人过多，服务器的上行带宽一定会变得捉襟见肘，因此每个人的下载速度都会变慢。就像全班同学都去问同一个老师问题，老师就很难快速解答某一个同学了。</p>
<h4 id="非中心化下载"><a href="#非中心化下载" class="headerlink" title="非中心化下载"></a>非中心化下载</h4><p>对于非中心化下载，就是由中心化下载进行<strong>去中心化</strong>的产物，让这个中心变得不再那么关键。而我们今天要说的种子文件和磁力链接都是非中心下载模式的具体方式。</p>
<p>具体来说，就是我们的下载由原先的服务器向客户端传输数据，变为了客户端向客户端传输(<code>pear to pear</code>，简称<code>p2p</code>)。这样就形成了与中心化下载截然相反的局面，同时下载的人数越多，意味着同时向你传输数据的人数也可能越多，在一定合理的调度下，你的下载速度可能会不降反升。</p>
<h3 id="种子文件与磁力链接"><a href="#种子文件与磁力链接" class="headerlink" title="种子文件与磁力链接"></a>种子文件与磁力链接</h3><h4 id="种子文件（BT下载）"><a href="#种子文件（BT下载）" class="headerlink" title="种子文件（BT下载）"></a>种子文件（BT下载）</h4><p>所谓的种子，就是包含着一颗植物的所有信息的原型，有它，你就有了整颗植物的指向性信息。同样，种子文件中也包含了我们整个文件的指向性信息（例如：文件的块大小，块索引，<code>Hash</code>验证码等），但同时它还包含了<code>Tracker</code>服务器的信息。</p>
<p>当你尝试用种子文件下载时，首先你的客户端会解析<code>Tracker</code>信息，找到服务器地址并合理设置，之后由这个<code>Tracker</code>服务器为你指向正在同时下载这个文件的其他用户，由这些用户彼此之间进行上传和下载。</p>
<p>如果继续用学生与老师的例子来比喻的话，那就是很多学生去问老师，老师并不直接回答问题，而是告诉每个人他们有疑惑的问题哪个同学明白，让他们互相解决，这样对老师的压力就小很多了。尽管这样听起来挺不负责任的，但由于种子文件中有Hash校验，在一定程度上不会出现<strong>不懂的同学误人子弟</strong>的现象。</p>
<h4 id="磁力链接"><a href="#磁力链接" class="headerlink" title="磁力链接"></a>磁力链接</h4><p>尽管<code>BT下载</code>是去中心化的产物，但你一定看出来了，<code>Tracker</code>服务器仍然处于整个网络的中心地位，如果<code>Tracker</code>服务器被关闭，就可以阻断所有下载。</p>
<p>有没有一种方式可以实现<code>P2P</code>下载模式，又没有真正的中心呢？</p>
<p>答案是，有。那就是<a href="https://en.wikipedia.org/wiki/Distributed_hash_table">DHT技术</a>，<code>Distributed Hash Table</code>，即分布式哈希表。</p>
<p>简单来说就是每个客户端负责一个小范围的路由并存储少量数据，从而连接成一个下载网络，而没有真正的中心。</p>
<p>当你在客户端输入一个磁力链接后，客户端会从其中提取出一个20字节大小的哈希方法名，<code>infohash</code>，由这个哈希方法名得知自己周围的节点，并发送种子文件的下载请求，如果这些种子文件中包含<code>Tracker</code>，那么就可以像上述种子文件的下载方式那样进行下载。如果不包含<code>Tracker</code>，其中就会有哪些节点有包含Tracker的种子文件的信息，继续向这些节点发送种子文件的下载请求即可。</p>
<p>这就是好像是当你不会一道题，班里没有老师，你就可以问周围的同学，如果他们有人会做且会讲，那你就可以让他给你讲，如果有人只会做不会讲，那他一定可以告诉你他是从哪里学会的，于是你就找到了那个会讲的人，你也就变成了有一个会做且知道谁会讲的人。</p>
<h3 id="下载方式"><a href="#下载方式" class="headerlink" title="下载方式"></a>下载方式</h3><p>我知道，你们最关心的还是下载方式。</p>
<p>由于P2P传输不经过中心服务器，因此在监管上存在着很大的难度，也由此滋生了盗版资源和非法资源的传播。但毕竟还有很多优秀的正版资源值得我们去下载，在这里我推荐两个客户端。</p>
<h4 id="Bitcomet"><a href="#Bitcomet" class="headerlink" title="Bitcomet"></a>Bitcomet</h4><p><a href="https://www.bitcomet.com/en">bitcomet</a>是一款经典的BT下载器。下载完成后，安装时选择中文。安装好之后，打开<code>工具</code>标签，下来菜单中点击<code>选项</code>。依次点击<code>任务</code>，<code>bt下载</code>，<code>Tracker</code>。</p>
<p>在这里你可以添加自己找到的Tracker服务器，这样当任务开始的时候，可以向更多的Tracker发送询问，从而获得更多的传输节点，提升下载速度。</p>
<p>添加好后，勾选自动向BT下载任务添加以下Tracker服务器 和 每天自动更新Tracker列表。</p>
<h4 id="qbittorent"><a href="#qbittorent" class="headerlink" title="qbittorent"></a>qbittorent</h4><p><a href="https://github.com/qbittorrent/qBittorrent">qbittorent</a>是另一款经典BT下载器，使用起来也是大同小异。大家自己探索以下就好。</p>
<h4 id="Tracker"><a href="#Tracker" class="headerlink" title="Tracker"></a>Tracker</h4><p>至于Tracker列表，也许你能在<a href="https://trackerslist.com/#/zh?id=bitcomet-%e6%af%94%e7%89%b9%e5%bd%97%e6%98%9f">这里</a>找到。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>经验记录</tag>
        <tag>下载</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（三）</title>
    <url>/bbb012e90cee.html</url>
    <content><![CDATA[<p>书接<a href="http://zh.zihengzhang.top/3d7401568276.html#more">上文</a>，今天我们讲讲一些基础的信息布置和美化。</p>
<h3 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h3><p>进入<strong>主题配置文件</strong>，找到<code>avatar</code>，修改代码如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><code>rounded</code>意思是头像将展示在圆中。<code>rotated</code>的意思是点击会旋转。大家将自己需要的设置为<code>true</code>即可。</p>
<p>将自己的头像文件放在<code>themes/next/source/images</code>路径下，如果你的图片不是<code>jpg</code>格式，记得将上述代码中<code>url</code>后面的<code>.jpg</code>改为对应后缀。</p>
<h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><h4 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h4><p>在<code>根目录/source</code>下新建一个文件夹，名为<code>_data</code>，在其中添加文件<code>styles.styl</code>，内容如下。（如果你对于VS Code等工具使用不熟练，可以先建一个<code>styles.txt</code>，写好内容后将后缀改为<code>.styl</code>）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">body</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">url(/images/background.jpg);</span> <span class="string">/*自定义的图片*/</span></span><br><span class="line">  <span class="attr">background-size:</span> <span class="string">1920px</span> <span class="string">1080px;</span> </span><br><span class="line">  <span class="string">/*像素值为1920*1080，根据你自己的图片选择，你也可以用cover来覆盖*/</span></span><br><span class="line">  <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span> <span class="string">/*拒绝重复填充*/</span></span><br><span class="line">  <span class="attr">background-attachment:</span> <span class="string">fixed;</span> <span class="string">/*固定图层，不随鼠标滚动而滚动*/</span></span><br><span class="line">  <span class="string">background-position:center;</span>		<span class="string">/*图片显示起始位置*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将命名为<code>background</code>的背景图片添加到<code>themes/next/source/images</code>。</p>
<h4 id="设置透明度"><a href="#设置透明度" class="headerlink" title="设置透明度"></a>设置透明度</h4><p>有了背景图片，往往会被文章或其他板块挡住，无法尽情欣赏。因此板块的透明度调节势在必行。</p>
<p>仍旧在上面的<code>styles.styl</code>文件中，添加如下代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/*文章透明度*/</span></span><br><span class="line"><span class="string">.post-block</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">rgba(255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span><span class="string">)</span></span><br><span class="line">  <span class="attr">background-color:</span> <span class="string">;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*侧边框的透明度设置*/</span></span><br><span class="line"><span class="string">.sidebar</span> &#123;</span><br><span class="line">  <span class="attr">background-color:</span> <span class="string">transparent;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*菜单栏的透明度设置*/</span></span><br><span class="line"><span class="string">.header-inner</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">rgba(255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span><span class="string">);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*如果设置了本地搜索，设置它的透明度*/</span></span><br><span class="line"><span class="string">.popup</span> &#123;</span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照自己的喜好调节透明度即可，个人推荐<code>0.85 / 0.9</code>为宜，更低会影响阅读体验。</p>
<h3 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h3><p>如果你想在标签页添加新的标签，打开主题配置文件，找到<code>menu</code>字段。</p>
<p>我们以添加 <code>tags</code> 这个标签为例。</p>
<p>首先在menu字段下添加代码如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>tags: /tags/ || fa fa-tags</code>，<code>tags: </code> 为标签名， <code>/tags/</code> 为对应的前端路由， <code>fa</code>为图表的标签属性，<code>fa-tags</code>为图标的名称。默认的图标库在<a href="http://www.fontawesome.com.cn/faicons/#web-application">这里</a>，你可以找到自己喜欢的图标并替换。</p>
<p>此时，我们在根目录终端输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>此时，我们在<code>themes/next</code>文件夹下可以看到新的文件夹<code>tags</code>，其中包含一个<code>index.md</code>文件，进行修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tags/index.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我是选择标签的页面</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-04-14 10:58:17</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span> <span class="comment"># 设置页面类型</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>



<h3 id="背景音乐"><a href="#背景音乐" class="headerlink" title="背景音乐"></a>背景音乐</h3><p>很多博客建议使用网易云外链，但据我使用，外链不美观且优化不好。这里我推荐使用<code>aplayer</code>插件，下载地址在<a href="https://github.com/DIYgod/APlayer">这里</a>。</p>
<p>将仓库中<code>dist</code>文件夹复制到<code>根目录/themes/next/source</code>，在dist里新建music.js文件，添加代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ap = <span class="keyword">new</span> <span class="title class_">APlayer</span>(&#123;</span><br><span class="line">  <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;aplayer&quot;</span>),</span><br><span class="line">  <span class="attr">fixed</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">theme</span>: <span class="string">&quot;#000&quot;</span>,</span><br><span class="line">  <span class="attr">mutex</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">lrcType</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">audio</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;歌曲名&quot;</span>,</span><br><span class="line">      <span class="attr">artist</span>: <span class="string">&quot;作者&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;http://music.163.com/song/media/outer/url?id=网易云音乐id.mp3&quot;</span>,</span><br><span class="line">      <span class="attr">cover</span>:</span><br><span class="line"><span class="string">&quot;封面地址&quot;</span>,</span><br><span class="line">      <span class="attr">lrc</span>: ,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>其中<code>网易云音乐id</code>可以在网易云音乐网页版打开一首歌曲，在地址栏中找到它的id，复制并替换进去即可。</p>
<p><code>封面地址</code>可以对网易云音乐的歌曲封面<code>右键</code>，<code>在新的标签页打开</code>查看地址。</p>
<p>我们进入<code>根目录/themes/next/layout/_layout.swig</code>，在<code>&lt;body&gt;</code>标签中添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">aplayer</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">id=&quot;aplayer&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type=&quot;text/javascript&quot;</span> <span class="string">src=&quot;/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type=&quot;text/javascript&quot;</span> <span class="string">src=&quot;/dist/music.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<head>标签中添加播放器样式代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/dist/APlayer.min.css&quot; /&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（二）</title>
    <url>/3d7401568276.html</url>
    <content><![CDATA[<p>书接<a href="http://zh.zihengzhang.top/1b1c750fe7e1.html">上文</a>，我们今天讲讲怎么搭建自己的博客主题，以及如何上传自己的博客。</p>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p><code>Next</code>是基于<code>Hexo</code>框架的一款博客主题，优点就是简洁，简便，可扩展性好。非常适合新手上手，后期也有足够多的扩展空间供你丰富自己的博客。</p>
<h4 id="Next下载"><a href="#Next下载" class="headerlink" title="Next下载"></a>Next下载</h4><p>我们首先将<code>Next</code>主题下载到<code>根目录/themes</code>下。</p>
<p>我们在根目录下打开<code>git bash here</code>（事实上其他终端也可以，例如<code>VS Code</code>，此后我们统称终端）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h4 id="Next主题配置"><a href="#Next主题配置" class="headerlink" title="Next主题配置"></a>Next主题配置</h4><p>此时我们可以找到<code>根目录/_config.yml</code>,这个是我们博客站点的配置文件，值得一提的是，在<code>根目录/themes/next/</code>下，也有一个<code>_config.yml</code>，这个是我们<code>Next</code>主题的配置文件。为了区分这二者，我们此后统一称前者为<strong>站点配置文件</strong>，后者为<strong>主题配置文件</strong>。</p>
<p>打开<strong>站点配置文件</strong>，并对其进行相关信息的修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 你博客的名字</span><br><span class="line">subtitle: 博客副标题</span><br><span class="line">author: 作者的名字</span><br><span class="line">#language: zh-CN 简体中文 | zh-TW 繁体中文 | en 英文</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># 主题改为 next</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>我们打开<strong>主题配置文件</strong>，找到<code>Schemes</code>字段（<code>Ctrl + F</code>搜索即可），发现有代码如下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>分别代表了Next的四种风格，你可以选择你喜欢的那一款，将其取消注释（去掉前面的#，对其他行加#）。这里我选择了<code>Gemini</code>。</p>
<p>此时我们在根目录终端，依次输入以下代（<code>/</code>前后的代码输入一种就可以，等价）。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除public文件夹，即清除以前的发布</span></span><br><span class="line">hexo clean / hexo cl</span><br><span class="line"><span class="comment"># 生成新的public文件夹</span></span><br><span class="line">hexo generate / hexo g</span><br><span class="line"><span class="comment"># 本地发布</span></span><br><span class="line">hexo server / hexo s</span><br></pre></td></tr></table></figure>

<p>点击反馈的链接，我们就可以在本地查看自己的博客主页啦。</p>
<h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><p>好了，我们的博客大致已经搭起来了。接下来我们来看看博客最重要的部分——文章应该怎么创建、编辑和发布。</p>
<h4 id="文章创建"><a href="#文章创建" class="headerlink" title="文章创建"></a>文章创建</h4><p>我们在<strong>站点配置文件</strong>找到如下代码，将其中的<code>false</code>更改为<code>true</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>此时，当我们在根目录终端中输入<code>hexo new mypost</code>，即会出现一个名为<code>mypost</code>的<code>md</code>文件，以及一个同名文件夹。这个.md文件就是我们要编辑的文章，而同名的文件夹可以为我们提供存储”这篇文章内的图片“的地址。</p>
<h4 id="文章编辑"><a href="#文章编辑" class="headerlink" title="文章编辑"></a>文章编辑</h4><p>如果你是第一次接触.md文件可能不知道如何编辑它。其实记事本就可以，但很多格式上的问题导致用记事本很麻烦，在这里我们推荐一款软件，<a href="https://typoraio.cn/">Typora</a>，操作起来很方便。</p>
<p>格式上来说，一篇文章的开头存在如下段落：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 题目</span><br><span class="line">date: 2022-10-23 10:25:34</span><br><span class="line"># 标签</span><br><span class="line">tag: </span><br><span class="line">- A</span><br><span class="line">- B</span><br><span class="line"># 类别</span><br><span class="line">categories: </span><br><span class="line">- xx</span><br><span class="line">- yy</span><br><span class="line">#后续可能还有其他内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>在这里，我们可以对文章的基本信息进行编辑。</p>
<p>除此之外，文章的具体排版则可以根据自己的需求进行，我们主要讲讲文章中如何插入图片。</p>
<p>首先在根目录终端中输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure>

<p>安装 <code>hexo-renderer-marked</code> 插件。</p>
<p>在<strong>站点配置文件</strong>中，在 <code>post_asset_folder: true</code> 下添加以下内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>

<p>此后，当我们在文章中输入<code>![](image.jpg)</code>，即代表我们在此处插入了同名文件夹中的<code>image.jpg</code>图片。</p>
<h3 id="网页部署"><a href="#网页部署" class="headerlink" title="网页部署"></a>网页部署</h3><h4 id="部署前准备"><a href="#部署前准备" class="headerlink" title="部署前准备"></a>部署前准备</h4><p>首先我们安装部署的插件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完成后，我们进入<strong>站点配置文件</strong>，修改<code>deploy</code>字段如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  // 记得替换成自己的repo</span><br><span class="line">  repo: git@github.com:TVT233/TVT233.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>此时，我们就可以向网页部署我们的内容啦。</p>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>文章发布同一切站点更改的发布一样，在根目录终端使用如下命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除public文件夹，即清除以前的发布</span></span><br><span class="line">hexo clean / hexo cl</span><br><span class="line"><span class="comment"># 生成新的public文件夹</span></span><br><span class="line">hexo generate / hexo g</span><br><span class="line"><span class="comment"># 本地发布</span></span><br><span class="line">hexo server / hexo s</span><br><span class="line"><span class="comment"># 网页发布</span></span><br><span class="line">hexo deploy / hexo d</span><br></pre></td></tr></table></figure>

<p>如果你第一次部署时报错，可以尝试输入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;gitHub邮箱&quot;</span><br><span class="line">git config --global user.name &quot;gitHub用户名&quot;</span><br></pre></td></tr></table></figure>

<p>然后继续重复上面的部署命令。</p>
<p>过一会（可能几分钟），你就可以在浏览器输入<code>www.你的github用户名.github.io</code>来访问自己的博客啦。</p>
]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（一）</title>
    <url>/1b1c750fe7e1.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近做了自己的博客，说实话我自己对前端的配置相关的问题确实不太懂，所以一切都是在边学边用下完成的。网上的教程有些写的不错，但时间太古早了。有些写的问题比较贴合我自己的情况，又比较零散。</p>
<p>因此，我准备写一个帖子来记录自己的搭建过程。</p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="静态？动态？"><a href="#静态？动态？" class="headerlink" title="静态？动态？"></a>静态？动态？</h4><p>首先，我们要知道自己想要的博客属于静态还是动态。</p>
<p>所谓的静态并不是指网站不含有动画等可”动“的部分，而是指网站上的内容相对恒定，无互动性，服务器和数据库的支撑，但同时更新内容往往需要手动操作，因此维护工作量比较大。</p>
<p>而动态网站则使用服务器和数据库来支持自己更加具有互动性，更自动的功能。但同时，这些功能也带来了网站的运行成本增加（一年几百很正常），以及在访问量大时网站运行速度下降等问题。</p>
<p>说到这，你可能就明白了，我们的个人博客属于静态网站，因此运行成本是比较低的。</p>
<h4 id="hexo-github托管"><a href="#hexo-github托管" class="headerlink" title="hexo + github托管"></a>hexo + github托管</h4><p>对于静态博客，我们在这里选择<a href="https://hexo.io/zh-cn/"><code>hexo</code></a>博客框架+<a href="https://github.com/"><code>github</code></a>托管的方式，这对于新手来说是比较友好的。等我们有了更多经验，则可以尝试更多的框架和更丰富的方式。</p>
<p>有关于<code>hexo</code>的具体介绍和<code>github</code>的账号注册，大家可以在上面的链接中自行查看。我就不一一赘述了。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><p><a href="https://git-scm.com/"><code>git</code></a>是一个分布式版本控制系统，我们用<code>git</code>来向<code>github</code>这个服务器提交文件。</p>
<p>在官网中选择<code>download</code>，选择你的系统，例如<code>windows</code>，再选择<code>64</code>位系统版本，下载安装即可。</p>
<img src="/1b1c750fe7e1/git%E4%B8%8B%E8%BD%BD.png" class=""> 

<p>安装后我们在文件夹中右键，会出现如下选项。</p>
<img src="/1b1c750fe7e1/%E9%AA%8C%E8%AF%81git.jpg" class=""> 

<p>选择后，进入命令行，输入<code>git --version</code>，若出现版本号，即为成功。</p>
<img src="/1b1c750fe7e1/git%E7%89%88%E6%9C%AC.png" class="">



<h4 id="连接git与github"><a href="#连接git与github" class="headerlink" title="连接git与github"></a>连接git与github</h4><p>之前我们说过，<code>git</code>可以理解为向<code>github</code>传输文件的工具。那么这种传输如何实现呢？</p>
<p>我们用<code>SSH</code>来实现，即<code>Secure Shell</code>协议。</p>
<h5 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h5><p>在任意文件夹中右键打开<code>git bash here</code>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#用rsa加密生成ssh钥匙</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>

<p>一直空格默认后，我们就可以发现在本地生成了两把钥匙：<code>id_rsa</code> 和 <code>id_rsa.pub</code>。由于我是<code>windows</code>系统，路径是<code>C:/Users/admin/.ssh</code>。</p>
<h5 id="获取公钥并连接"><a href="#获取公钥并连接" class="headerlink" title="获取公钥并连接"></a>获取公钥并连接</h5><p>在该文件夹中右键打开<code>git bash here</code>依次输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>就可以看到对应的公钥了，将其复制下来备用。</p>
<img src="/1b1c750fe7e1/ssh%E5%85%AC%E9%92%A5.png" class="">

<p>打开<code>github</code>并登录，点击右上角个人头像，选择下拉菜单中的<code>settings</code>，点击左侧标签栏的<code>SSH and GPG keys</code>，点击<code>New SSH key</code>。输入你的公钥内容，<code>Title</code>任意填写，最后选择<code>Add SSH key</code>以保存即可。</p>
<p>此时我们回到之前的<code>git bash</code>窗口，输入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>若出现<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code></p>
<p>我们输入<code>yes</code>，当弹出以下回复时，说明连接成功。</p>
<img src="/1b1c750fe7e1/git%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.png" class="">

<p>至此，<code>git</code>与<code>github</code>成功连接。</p>
<h3 id="github建库"><a href="#github建库" class="headerlink" title="github建库"></a>github建库</h3><p>接下来，我们在<code>github</code>建立一个仓库来保存自己主页的资源。</p>
<p>登录<code>github</code>，点击右上角头像，下拉菜单中选择<code>repositories</code>，进入页面后点击<code>New</code>。</p>
<p>在<code>repository name</code>一栏输入<code>自己的github账户名.github.io</code>。例如我的账户名叫<code>TVT233</code>，那么我在这里就要输入<code>TVT233.github.io</code>。</p>
<img src="/1b1c750fe7e1/github%E5%BB%BA%E5%BA%93.png" class="">

<p>并在下方勾选<code>Public</code>。</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p><code>Hexo</code>博客框架的搭建需要用到<code>npm</code>，一个<code>node</code>包管理工具，因此我们先来安装<code>node</code>。</p>
<h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><p>进入<a href="http://nodejs.cn/download/">node</a>官网，选择自己的操作系统并点击，即可下载对应的版本。</p>
<p>下载完成后，我们建立一个文件夹作为安装目录。打开安装包后，一路<code>next</code>即可。记得更改安装路径就行了。</p>
<p>安装好之后，我们来验证一下。<code>win+R</code>组合键，输入<code>cmd</code>打开命令行工具，输入以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看node安装版本</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment">#查看node安装路径</span></span><br><span class="line"><span class="built_in">where</span> node</span><br></pre></td></tr></table></figure>

<p>若有对应的输出结果，即为安装成功。</p>
<h4 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h4><p>安装好<code>node</code>后，我们在本地搭建自己的博客文件。首先新建一个文件夹，作为本地博客文件的存储点。<strong>大家一定要记得这个路径</strong>。</p>
<h5 id="本地资源存储"><a href="#本地资源存储" class="headerlink" title="本地资源存储"></a>本地资源存储</h5><p>进入这个文件夹，右键<code>git bash here</code>,依次输入以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装hexo</span></span><br><span class="line">npm i -g hexo-cli</span><br><span class="line"><span class="comment">#初始化hexo</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>此时继续输入以下命令（二者等价，前者是后者的缩写）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">#</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>在博客文件夹中会生成一个<code>public</code>文件夹，里面就是我们博客托管的内容</p>
<h5 id="本地网页浏览"><a href="#本地网页浏览" class="headerlink" title="本地网页浏览"></a>本地网页浏览</h5><p>此时我们输入以下命令（二者等价，前者是后者的缩写）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line">#</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>会反馈一个本地连接，左键点击它即可访问本地网页浏览我们的博客了。</p>
<p>使用<code>Ctrl+c</code>可以关闭它。</p>
<img src="/1b1c750fe7e1/%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%A7%8B%E5%8C%96.jpg" class="">

<p>到此，我们的博客就搭建完成啦。</p>
]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建MC服务器记录</title>
    <url>/d3af824b28d7.html</url>
    <content><![CDATA[<p>最近朋友准备搭建一个MC服务器，以供几位好友随时玩，网易的联机总是需要主机在线，不大方便。但等了几天也没搭好，赶上我有空，就尝试了一下。顺手记录。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先需要一台云服务器，国内主流的云平台像阿里云、腾讯云、华为云、U刻得（Ucloud）等都可以。</p>
<p>这里我因为只是尝试一下，遂选用了<a href="https://account.aliyun.com/login/login.htm?oauth_callback=https://ecs.console.aliyun.com/server/i-0jla9660a9theaakxa14/detail?regionId=cn-wulanchabu">阿里云</a>，因为它有个<a href="https://developer.aliyun.com/plan/student#J_5144437010">学生入门免费领取一月</a>的服务器。配置是2核2G，1M带宽，40G资源盘。可能联机3个人以上就费劲了，但作为入门总归是够的。</p>
<p>领取服务器之前需要完成一个小任务并且答题，小任务跟着手册做就行，大概需要10分钟，答题也很简单，不会的大家自己搜搜就搞定啦。</p>
<h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="端口放行"><a href="#端口放行" class="headerlink" title="端口放行"></a>端口放行</h4><p>首先我们打开服务器，看到安全组的名称，并点击。</p>
<p><img src="/d3af824b28d7/%E5%AE%89%E5%85%A8%E7%BB%84.png"></p>
<p>在出入端口（出方向和入方向都要）手动添加25565端口。具体的设置方式是，目的处写<code>25565/25565</code>，授权对象处写<code>0.0.0.0/0</code>。后续所有端口设置均如此。</p>
<img src="/d3af824b28d7/%E8%AE%BE%E7%BD%AE%E5%87%BA%E5%85%A5%E7%AB%AF%E5%8F%A3.png" class="">

<h4 id="打开服务器控制台"><a href="#打开服务器控制台" class="headerlink" title="打开服务器控制台"></a>打开服务器控制台</h4><p>此时，我们点击左侧标签栏的“<strong>实例</strong>”，并选择我们的云服务器，进入页面后点击远程连接。选择“<strong>Workbench远程登陆</strong>”，即可在新的标签页中找到我们服务器的控制台。如果你喜欢用VNC或者其他任何连接方式也没问题，这里我以Workbench为例。</p>
<img src="/d3af824b28d7/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.jpg" class="">

<img src="/d3af824b28d7/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0.jpg" class="">

<p>至此，我们的服务器配置问题结束了。</p>
<h3 id="下载Java和MC服务器端"><a href="#下载Java和MC服务器端" class="headerlink" title="下载Java和MC服务器端"></a>下载Java和MC服务器端</h3><h4 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h4><p>首先，我们给MC建立一个目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#返回根目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment">#建立mc1.13.2</span></span><br><span class="line"><span class="built_in">mkdir</span> mc1.13.2</span><br><span class="line"><span class="comment">#进入mc1.13.2</span></span><br><span class="line"><span class="built_in">cd</span> mc1.13.2</span><br></pre></td></tr></table></figure>

<h4 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h4><p>1.16及以下的版本使用Java8即可，而1.17及以上的版本则需要更新的Java。大家按照自己想玩的版本对应即可，我这里准备玩1.13.2所以使用Java8。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装Java</span></span><br><span class="line">sudo yum install java-1.8.0-openjdk</span><br><span class="line"><span class="comment">#安装过程中会出现询问，记得输入y以同意。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装完毕后可用以下代码验证成功安装</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>若出现以下版本，则代表安装完成。</p>
<img src="/d3af824b28d7/Java%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.jpg" class="">

<h4 id="下载MC服务端"><a href="#下载MC服务端" class="headerlink" title="下载MC服务端"></a>下载MC服务端</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载MC服务端</span></span><br><span class="line">sudo wget https://launcher.mojang.com/v1/objects/3737db93722a9e39eeada7c27e7aca28b144ffa7/server.jar</span><br></pre></td></tr></table></figure>

<p>这里我下载的是1.13.2的服务端，如果你想要玩其他版本，可以从<a href="https://mcversions.net/">这里</a>找到。</p>
<h4 id="下载screen"><a href="#下载screen" class="headerlink" title="下载screen"></a>下载screen</h4><p>screen是一个可以创建虚拟终端的插件，我们可以使用它做到24小时运行服务器。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装screen</span></span><br><span class="line">sudo yum install -y screen</span><br><span class="line"><span class="comment">#创建并打开一个虚拟终端，名叫“mc”</span></span><br><span class="line">screen -R mc</span><br></pre></td></tr></table></figure>

<p>此时你应该进入了一个新的界面，这说明你成功进入了虚拟终端。</p>
<p>同样我们使用以下命令组合进入mc1.13.2目录下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">cd</span> mc1.13.2</span><br></pre></td></tr></table></figure>



<h3 id="运行MC服务器端"><a href="#运行MC服务器端" class="headerlink" title="运行MC服务器端"></a>运行MC服务器端</h3><h4 id="运行服务器端"><a href="#运行服务器端" class="headerlink" title="运行服务器端"></a>运行服务器端</h4><p>至此，我们就可以准备运行我们的服务器啦。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Xmx是最大使用内存 Xms是最小使用内存 server.jar是文件名.后缀</span></span><br><span class="line">java -Xmx1000M -Xms256M -jar server.jar</span><br></pre></td></tr></table></figure>

<p>第一次没运行成功？没关系，往下看~</p>
<h4 id="修改相关文件"><a href="#修改相关文件" class="headerlink" title="修改相关文件"></a>修改相关文件</h4><p>第一次运行不会成功，会报需要先同意EULA。</p>
<p>这时我们进入Eula文件并修改</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入eula.txt文件</span></span><br><span class="line">vim eula.txt</span><br></pre></td></tr></table></figure>

<p>进入后，点击<code>i</code>键进入编辑模式，将<code>false</code>更改为<code>true</code>。</p>
<p>修改完毕后点击<code>ESC</code>退出编辑模式，并输入<code>:wq</code>退出文件。</p>
<p>如果你或者你的朋友们使用的不是正版mc登录，那么你还需要将正版验证关掉。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入server.properties</span></span><br><span class="line">vim server.properties</span><br></pre></td></tr></table></figure>

<p>找到其中的<code>online-mode</code>一行，并将<code>true</code>改为<code>false</code>即可。</p>
<h3 id="用HMCL登录MC服务器"><a href="#用HMCL登录MC服务器" class="headerlink" title="用HMCL登录MC服务器"></a>用HMCL登录MC服务器</h3><p>打开<a href="https://hmcl.huangyuhui.net/">HMCL</a>启动器，下载对应的版本并打开多人模式。</p>
<img src="/d3af824b28d7/MC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0.png" class="">

<p>服务器地址为<strong>你服务器的<code>公网ip:25565</code><strong>。特别要注意的一点是，冒号是英文的冒号，MC窗口内中英文冒号看起来一样，自己一定要注意，否则导致</strong>主机名解析失败</strong>。</p>
<h4 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h4><img src="/d3af824b28d7/%E6%88%90%E5%8A%9F.png" class="">

<h4 id="退出screen，完成24小时运行"><a href="#退出screen，完成24小时运行" class="headerlink" title="退出screen，完成24小时运行"></a>退出screen，完成24小时运行</h4><p>最后别忘了使用<code>Ctrl+a</code> 和 <code>d</code>退出screen，这样就可以24小时开启服务器不管啦。</p>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>我的世界</tag>
        <tag>MC</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>我和L</title>
    <url>/02063b73cdf0.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再次输入。或者向我询问密码。" data-whm="哈希校验错误。">
  <script id="hbeData" type="hbeData" data-hmacdigest="ad883b3706235e81e47200595be3fa843392f5287bc0d1ea2fa2085dcd0f47eb"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>需要密码</tag>
        <tag>情感</tag>
      </tags>
  </entry>
  <entry>
    <title>如何写一篇文章的“related work”部分</title>
    <url>/f2a7da94c8dc.html</url>
    <content><![CDATA[<h3 id="如何写一篇文章的“related-work”部分"><a href="#如何写一篇文章的“related-work”部分" class="headerlink" title="如何写一篇文章的“related work”部分"></a>如何写一篇文章的“related work”部分</h3>]]></content>
  </entry>
</search>
