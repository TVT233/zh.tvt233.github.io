<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你好！欢迎来到我的网站！</title>
    <url>/414d15ce29a6.html</url>
    <content><![CDATA[<h4 id="来看看这有什么"><a href="#来看看这有什么" class="headerlink" title="来看看这有什么"></a>来看看这有什么</h4><p>**<a href="https://zh.zihengzhang.top/about/">关于</a>**：在这你可以看到关于我的个人信息，教育和研究经历。如果你需要，里面还有我的个人简历和联系方式。</p>
<p>**<a href="https://zh.zihengzhang.top/research/">研究</a>**：在这你可以看到我之前做过的一些研究，以及我现在正在做的研究。</p>
<p>**<a href="https://zh.zihengzhang.top/applications/">应用</a>**：在这你可以找到我做过的一些应用方向的项目，展示视频以及相关理论介绍的论文。</p>
<h4 id="关于我的博客"><a href="#关于我的博客" class="headerlink" title="关于我的博客"></a>关于我的博客</h4><p>在未来，我会写一些博客来记录自己的学习和生活，你可以依靠<a href="https://zh.zihengzhang.top/tags/">标签</a> 和 <a href="https://zh.zihengzhang.top/categories/">分类</a> 来找到它们。</p>
]]></content>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（三）</title>
    <url>/bbb012e90cee.html</url>
    <content><![CDATA[<p>书接<a href="http://zh.zihengzhang.top/3d7401568276.html#more">上文</a>，今天我们讲讲一些基础的信息布置和美化。</p>
<h3 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h3><p>进入<strong>主题配置文件</strong>，找到<code>avatar</code>，修改代码如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><code>rounded</code>意思是头像将展示在圆中。<code>rotated</code>的意思是点击会旋转。大家将自己需要的设置为<code>true</code>即可。</p>
<p>将自己的头像文件放在<code>themes/next/source/images</code>路径下，如果你的图片不是<code>jpg</code>格式，记得将上述代码中<code>url</code>后面的<code>.jpg</code>改为对应后缀。</p>
<h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><h4 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h4><p>在<code>根目录/source</code>下新建一个文件夹，名为<code>_data</code>，在其中添加文件<code>styles.styl</code>，内容如下。（如果你对于VS Code等工具使用不熟练，可以先建一个<code>styles.txt</code>，写好内容后将后缀改为<code>.styl</code>）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">body</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">url(/images/background.jpg);</span> <span class="string">/*自定义的图片*/</span></span><br><span class="line">  <span class="attr">background-size:</span> <span class="string">1920px</span> <span class="string">1080px;</span> </span><br><span class="line">  <span class="string">/*像素值为1920*1080，根据你自己的图片选择，你也可以用cover来覆盖*/</span></span><br><span class="line">  <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span> <span class="string">/*拒绝重复填充*/</span></span><br><span class="line">  <span class="attr">background-attachment:</span> <span class="string">fixed;</span> <span class="string">/*固定图层，不随鼠标滚动而滚动*/</span></span><br><span class="line">  <span class="string">background-position:center;</span>		<span class="string">/*图片显示起始位置*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将命名为<code>background</code>的背景图片添加到<code>themes/next/source/images</code>。</p>
<h4 id="设置透明度"><a href="#设置透明度" class="headerlink" title="设置透明度"></a>设置透明度</h4><p>有了背景图片，往往会被文章或其他板块挡住，无法尽情欣赏。因此板块的透明度调节势在必行。</p>
<p>仍旧在上面的<code>styles.styl</code>文件中，添加如下代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/*文章透明度*/</span></span><br><span class="line"><span class="string">.post-block</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">rgba(255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span><span class="string">)</span></span><br><span class="line">  <span class="attr">background-color:</span> <span class="string">;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*侧边框的透明度设置*/</span></span><br><span class="line"><span class="string">.sidebar</span> &#123;</span><br><span class="line">  <span class="attr">background-color:</span> <span class="string">transparent;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*菜单栏的透明度设置*/</span></span><br><span class="line"><span class="string">.header-inner</span> &#123;</span><br><span class="line">  <span class="attr">background:</span> <span class="string">rgba(255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span><span class="string">);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">/*如果设置了本地搜索，设置它的透明度*/</span></span><br><span class="line"><span class="string">.popup</span> &#123;</span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按照自己的喜好调节透明度即可，个人推荐<code>0.85 / 0.9</code>为宜，更低会影响阅读体验。</p>
<h3 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h3><p>如果你想在标签页添加新的标签，打开主题配置文件，找到<code>menu</code>字段。</p>
<p>我们以添加 <code>tags</code> 这个标签为例。</p>
<p>首先在menu字段下添加代码如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>tags: /tags/ || fa fa-tags</code>，<code>tags: </code> 为标签名， <code>/tags/</code> 为对应的前端路由， <code>fa</code>为图表的标签属性，<code>fa-tags</code>为图标的名称。默认的图标库在<a href="http://www.fontawesome.com.cn/faicons/#web-application">这里</a>，你可以找到自己喜欢的图标并替换。</p>
<p>此时，我们在根目录终端输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>此时，我们在<code>themes/next</code>文件夹下可以看到新的文件夹<code>tags</code>，其中包含一个<code>index.md</code>文件，进行修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tags/index.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我是选择标签的页面</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-04-14 10:58:17</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span> <span class="comment"># 设置页面类型</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>



<h3 id="背景音乐"><a href="#背景音乐" class="headerlink" title="背景音乐"></a>背景音乐</h3><p>很多博客建议使用网易云外链，但据我使用，外链不美观且优化不好。这里我推荐使用<code>aplayer</code>插件，下载地址在<a href="https://github.com/DIYgod/APlayer">这里</a>。</p>
<p>将仓库中<code>dist</code>文件夹复制到<code>根目录/themes/next/source</code>，在dist里新建music.js文件，添加代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ap = <span class="keyword">new</span> <span class="title class_">APlayer</span>(&#123;</span><br><span class="line">  <span class="attr">container</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;aplayer&quot;</span>),</span><br><span class="line">  <span class="attr">fixed</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">autoplay</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">theme</span>: <span class="string">&quot;#000&quot;</span>,</span><br><span class="line">  <span class="attr">mutex</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">lrcType</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">audio</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;歌曲名&quot;</span>,</span><br><span class="line">      <span class="attr">artist</span>: <span class="string">&quot;作者&quot;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;http://music.163.com/song/media/outer/url?id=网易云音乐id.mp3&quot;</span>,</span><br><span class="line">      <span class="attr">cover</span>:</span><br><span class="line"><span class="string">&quot;封面地址&quot;</span>,</span><br><span class="line">      <span class="attr">lrc</span>: ,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>其中<code>网易云音乐id</code>可以在网易云音乐网页版打开一首歌曲，在地址栏中找到它的id，复制并替换进去即可。</p>
<p><code>封面地址</code>可以对网易云音乐的歌曲封面<code>右键</code>，<code>在新的标签页打开</code>查看地址。</p>
<p>我们进入<code>根目录/themes/next/layout/_layout.swig</code>，在<code>&lt;body&gt;</code>标签中添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">aplayer</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">id=&quot;aplayer&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type=&quot;text/javascript&quot;</span> <span class="string">src=&quot;/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type=&quot;text/javascript&quot;</span> <span class="string">src=&quot;/dist/music.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>在<head>标签中添加播放器样式代码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/dist/APlayer.min.css&quot; /&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（二）</title>
    <url>/3d7401568276.html</url>
    <content><![CDATA[<p>书接<a href="http://zh.zihengzhang.top/1b1c750fe7e1.html">上文</a>，我们今天讲讲怎么搭建自己的博客主题，以及如何上传自己的博客。</p>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p><code>Next</code>是基于<code>Hexo</code>框架的一款博客主题，优点就是简洁，简便，可扩展性好。非常适合新手上手，后期也有足够多的扩展空间供你丰富自己的博客。</p>
<h4 id="Next下载"><a href="#Next下载" class="headerlink" title="Next下载"></a>Next下载</h4><p>我们首先将<code>Next</code>主题下载到<code>根目录/themes</code>下。</p>
<p>我们在根目录下打开<code>git bash here</code>（事实上其他终端也可以，例如<code>VS Code</code>，此后我们统称终端）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h4 id="Next主题配置"><a href="#Next主题配置" class="headerlink" title="Next主题配置"></a>Next主题配置</h4><p>此时我们可以找到<code>根目录/_config.yml</code>,这个是我们博客站点的配置文件，值得一提的是，在<code>根目录/themes/next/</code>下，也有一个<code>_config.yml</code>，这个是我们<code>Next</code>主题的配置文件。为了区分这二者，我们此后统一称前者为<strong>站点配置文件</strong>，后者为<strong>主题配置文件</strong>。</p>
<p>打开<strong>站点配置文件</strong>，并对其进行相关信息的修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 你博客的名字</span><br><span class="line">subtitle: 博客副标题</span><br><span class="line">author: 作者的名字</span><br><span class="line">#language: zh-CN 简体中文 | zh-TW 繁体中文 | en 英文</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># 主题改为 next</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>我们打开<strong>主题配置文件</strong>，找到<code>Schemes</code>字段（<code>Ctrl + F</code>搜索即可），发现有代码如下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>分别代表了Next的四种风格，你可以选择你喜欢的那一款，将其取消注释（去掉前面的#，对其他行加#）。这里我选择了<code>Gemini</code>。</p>
<p>此时我们在根目录终端，依次输入以下代（<code>/</code>前后的代码输入一种就可以，等价）。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除public文件夹，即清除以前的发布</span></span><br><span class="line">hexo clean / hexo cl</span><br><span class="line"><span class="comment"># 生成新的public文件夹</span></span><br><span class="line">hexo generate / hexo g</span><br><span class="line"><span class="comment"># 本地发布</span></span><br><span class="line">hexo server / hexo s</span><br></pre></td></tr></table></figure>

<p>点击反馈的链接，我们就可以在本地查看自己的博客主页啦。</p>
<h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><p>好了，我们的博客大致已经搭起来了。接下来我们来看看博客最重要的部分——文章应该怎么创建、编辑和发布。</p>
<h4 id="文章创建"><a href="#文章创建" class="headerlink" title="文章创建"></a>文章创建</h4><p>我们在<strong>站点配置文件</strong>找到如下代码，将其中的<code>false</code>更改为<code>true</code>。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>此时，当我们在根目录终端中输入<code>hexo new mypost</code>，即会出现一个名为<code>mypost</code>的<code>md</code>文件，以及一个同名文件夹。这个.md文件就是我们要编辑的文章，而同名的文件夹可以为我们提供存储”这篇文章内的图片“的地址。</p>
<h4 id="文章编辑"><a href="#文章编辑" class="headerlink" title="文章编辑"></a>文章编辑</h4><p>如果你是第一次接触.md文件可能不知道如何编辑它。其实记事本就可以，但很多格式上的问题导致用记事本很麻烦，在这里我们推荐一款软件，<a href="https://typoraio.cn/">Typora</a>，操作起来很方便。</p>
<p>格式上来说，一篇文章的开头存在如下段落：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 题目</span><br><span class="line">date: 2022-10-23 10:25:34</span><br><span class="line"># 标签</span><br><span class="line">tag: </span><br><span class="line">- A</span><br><span class="line">- B</span><br><span class="line"># 类别</span><br><span class="line">categories: </span><br><span class="line">- xx</span><br><span class="line">- yy</span><br><span class="line">#后续可能还有其他内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>在这里，我们可以对文章的基本信息进行编辑。</p>
<p>除此之外，文章的具体排版则可以根据自己的需求进行，我们主要讲讲文章中如何插入图片。</p>
<p>首先在根目录终端中输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure>

<p>安装 <code>hexo-renderer-marked</code> 插件。</p>
<p>在<strong>站点配置文件</strong>中，在 <code>post_asset_folder: true</code> 下添加以下内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>

<p>此后，当我们在文章中输入<code>![](image.jpg)</code>，即代表我们在此处插入了同名文件夹中的<code>image.jpg</code>图片。</p>
<h3 id="网页部署"><a href="#网页部署" class="headerlink" title="网页部署"></a>网页部署</h3><h4 id="部署前准备"><a href="#部署前准备" class="headerlink" title="部署前准备"></a>部署前准备</h4><p>首先我们安装部署的插件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装完成后，我们进入<strong>站点配置文件</strong>，修改<code>deploy</code>字段如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  // 记得替换成自己的repo</span><br><span class="line">  repo: git@github.com:TVT233/TVT233.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>此时，我们就可以向网页部署我们的内容啦。</p>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>文章发布同一切站点更改的发布一样，在根目录终端使用如下命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除public文件夹，即清除以前的发布</span></span><br><span class="line">hexo clean / hexo cl</span><br><span class="line"><span class="comment"># 生成新的public文件夹</span></span><br><span class="line">hexo generate / hexo g</span><br><span class="line"><span class="comment"># 本地发布</span></span><br><span class="line">hexo server / hexo s</span><br><span class="line"><span class="comment"># 网页发布</span></span><br><span class="line">hexo deploy / hexo d</span><br></pre></td></tr></table></figure>

<p>如果你第一次部署时报错，可以尝试输入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;gitHub邮箱&quot;</span><br><span class="line">git config --global user.name &quot;gitHub用户名&quot;</span><br></pre></td></tr></table></figure>

<p>然后继续重复上面的部署命令。</p>
<p>过一会（可能几分钟），你就可以在浏览器输入<code>www.你的github用户名.github.io</code>来访问自己的博客啦。</p>
]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建及相关问题记录（一）</title>
    <url>/1b1c750fe7e1.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近做了自己的博客，说实话我自己对前端的配置相关的问题确实不太懂，所以一切都是在边学边用下完成的。网上的教程有些写的不错，但时间太古早了。有些写的问题比较贴合我自己的情况，又比较零散。</p>
<p>因此，我准备写一个帖子来记录自己的搭建过程。</p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="静态？动态？"><a href="#静态？动态？" class="headerlink" title="静态？动态？"></a>静态？动态？</h4><p>首先，我们要知道自己想要的博客属于静态还是动态。</p>
<p>所谓的静态并不是指网站不含有动画等可”动“的部分，而是指网站上的内容相对恒定，无互动性，服务器和数据库的支撑，但同时更新内容往往需要手动操作，因此维护工作量比较大。</p>
<p>而动态网站则使用服务器和数据库来支持自己更加具有互动性，更自动的功能。但同时，这些功能也带来了网站的运行成本增加（一年几百很正常），以及在访问量大时网站运行速度下降等问题。</p>
<p>说到这，你可能就明白了，我们的个人博客属于静态网站，因此运行成本是比较低的。</p>
<h4 id="hexo-github托管"><a href="#hexo-github托管" class="headerlink" title="hexo + github托管"></a>hexo + github托管</h4><p>对于静态博客，我们在这里选择<a href="https://hexo.io/zh-cn/"><code>hexo</code></a>博客框架+<a href="https://github.com/"><code>github</code></a>托管的方式，这对于新手来说是比较友好的。等我们有了更多经验，则可以尝试更多的框架和更丰富的方式。</p>
<p>有关于<code>hexo</code>的具体介绍和<code>github</code>的账号注册，大家可以在上面的链接中自行查看。我就不一一赘述了。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><p><a href="https://git-scm.com/"><code>git</code></a>是一个分布式版本控制系统，我们用<code>git</code>来向<code>github</code>这个服务器提交文件。</p>
<p>在官网中选择<code>download</code>，选择你的系统，例如<code>windows</code>，再选择<code>64</code>位系统版本，下载安装即可。</p>
<img src="/1b1c750fe7e1/git%E4%B8%8B%E8%BD%BD.png" class=""> 

<p>安装后我们在文件夹中右键，会出现如下选项。</p>
<img src="/1b1c750fe7e1/%E9%AA%8C%E8%AF%81git.jpg" class=""> 

<p>选择后，进入命令行，输入<code>git --version</code>，若出现版本号，即为成功。</p>
<img src="/1b1c750fe7e1/git%E7%89%88%E6%9C%AC.png" class="">



<h4 id="连接git与github"><a href="#连接git与github" class="headerlink" title="连接git与github"></a>连接git与github</h4><p>之前我们说过，<code>git</code>可以理解为向<code>github</code>传输文件的工具。那么这种传输如何实现呢？</p>
<p>我们用<code>SSH</code>来实现，即<code>Secure Shell</code>协议。</p>
<h5 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h5><p>在任意文件夹中右键打开<code>git bash here</code>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#用rsa加密生成ssh钥匙</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>

<p>一直空格默认后，我们就可以发现在本地生成了两把钥匙：<code>id_rsa</code> 和 <code>id_rsa.pub</code>。由于我是<code>windows</code>系统，路径是<code>C:/Users/admin/.ssh</code>。</p>
<h5 id="获取公钥并连接"><a href="#获取公钥并连接" class="headerlink" title="获取公钥并连接"></a>获取公钥并连接</h5><p>在该文件夹中右键打开<code>git bash here</code>依次输入</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>就可以看到对应的公钥了，将其复制下来备用。</p>
<img src="/1b1c750fe7e1/ssh%E5%85%AC%E9%92%A5.png" class="">

<p>打开<code>github</code>并登录，点击右上角个人头像，选择下拉菜单中的<code>settings</code>，点击左侧标签栏的<code>SSH and GPG keys</code>，点击<code>New SSH key</code>。输入你的公钥内容，<code>Title</code>任意填写，最后选择<code>Add SSH key</code>以保存即可。</p>
<p>此时我们回到之前的<code>git bash</code>窗口，输入以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>若出现<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code></p>
<p>我们输入<code>yes</code>，当弹出以下回复时，说明连接成功。</p>
<img src="/1b1c750fe7e1/git%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.png" class="">

<p>至此，<code>git</code>与<code>github</code>成功连接。</p>
<h3 id="github建库"><a href="#github建库" class="headerlink" title="github建库"></a>github建库</h3><p>接下来，我们在<code>github</code>建立一个仓库来保存自己主页的资源。</p>
<p>登录<code>github</code>，点击右上角头像，下拉菜单中选择<code>repositories</code>，进入页面后点击<code>New</code>。</p>
<p>在<code>repository name</code>一栏输入<code>自己的github账户名.github.io</code>。例如我的账户名叫<code>TVT233</code>，那么我在这里就要输入<code>TVT233.github.io</code>。</p>
<img src="/1b1c750fe7e1/github%E5%BB%BA%E5%BA%93.png" class="">

<p>并在下方勾选<code>Public</code>。</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p><code>Hexo</code>博客框架的搭建需要用到<code>npm</code>，一个<code>node</code>包管理工具，因此我们先来安装<code>node</code>。</p>
<h4 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h4><p>进入<a href="http://nodejs.cn/download/">node</a>官网，选择自己的操作系统并点击，即可下载对应的版本。</p>
<p>下载完成后，我们建立一个文件夹作为安装目录。打开安装包后，一路<code>next</code>即可。记得更改安装路径就行了。</p>
<p>安装好之后，我们来验证一下。<code>win+R</code>组合键，输入<code>cmd</code>打开命令行工具，输入以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看node安装版本</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment">#查看node安装路径</span></span><br><span class="line"><span class="built_in">where</span> node</span><br></pre></td></tr></table></figure>

<p>若有对应的输出结果，即为安装成功。</p>
<h4 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h4><p>安装好<code>node</code>后，我们在本地搭建自己的博客文件。首先新建一个文件夹，作为本地博客文件的存储点。<strong>大家一定要记得这个路径</strong>。</p>
<h5 id="本地资源存储"><a href="#本地资源存储" class="headerlink" title="本地资源存储"></a>本地资源存储</h5><p>进入这个文件夹，右键<code>git bash here</code>,依次输入以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装hexo</span></span><br><span class="line">npm i -g hexo-cli</span><br><span class="line"><span class="comment">#初始化hexo</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>此时继续输入以下命令（二者等价，前者是后者的缩写）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">#</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>在博客文件夹中会生成一个<code>public</code>文件夹，里面就是我们博客托管的内容</p>
<h5 id="本地网页浏览"><a href="#本地网页浏览" class="headerlink" title="本地网页浏览"></a>本地网页浏览</h5><p>此时我们输入以下命令（二者等价，前者是后者的缩写）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line">#</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>会反馈一个本地连接，左键点击它即可访问本地网页浏览我们的博客了。</p>
<p>使用<code>Ctrl+c</code>可以关闭它。</p>
<img src="/1b1c750fe7e1/%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%A7%8B%E5%8C%96.jpg" class="">

<p>到此，我们的博客就搭建完成啦。</p>
]]></content>
      <categories>
        <category>经验记录</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建MC服务器记录</title>
    <url>/d3af824b28d7.html</url>
    <content><![CDATA[<p>最近朋友准备搭建一个MC服务器，以供几位好友随时玩，网易的联机总是需要主机在线，不大方便。但等了几天也没搭好，赶上我有空，就尝试了一下。顺手记录。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先需要一台云服务器，国内主流的云平台像阿里云、腾讯云、华为云、U刻得（Ucloud）等都可以。</p>
<p>这里我因为只是尝试一下，遂选用了<a href="https://account.aliyun.com/login/login.htm?oauth_callback=https://ecs.console.aliyun.com/server/i-0jla9660a9theaakxa14/detail?regionId=cn-wulanchabu">阿里云</a>，因为它有个<a href="https://developer.aliyun.com/plan/student#J_5144437010">学生入门免费领取一月</a>的服务器。配置是2核2G，1M带宽，40G资源盘。可能联机3个人以上就费劲了，但作为入门总归是够的。</p>
<p>领取服务器之前需要完成一个小任务并且答题，小任务跟着手册做就行，大概需要10分钟，答题也很简单，不会的大家自己搜搜就搞定啦。</p>
<h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="端口放行"><a href="#端口放行" class="headerlink" title="端口放行"></a>端口放行</h4><p>首先我们打开服务器，看到安全组的名称，并点击。</p>
<p><img src="/d3af824b28d7/%E5%AE%89%E5%85%A8%E7%BB%84.png"></p>
<p>在出入端口（出方向和入方向都要）手动添加25565端口。具体的设置方式是，目的处写<code>25565/25565</code>，授权对象处写<code>0.0.0.0/0</code>。后续所有端口设置均如此。</p>
<img src="/d3af824b28d7/%E8%AE%BE%E7%BD%AE%E5%87%BA%E5%85%A5%E7%AB%AF%E5%8F%A3.png" class="">

<h4 id="打开服务器控制台"><a href="#打开服务器控制台" class="headerlink" title="打开服务器控制台"></a>打开服务器控制台</h4><p>此时，我们点击左侧标签栏的“<strong>实例</strong>”，并选择我们的云服务器，进入页面后点击远程连接。选择“<strong>Workbench远程登陆</strong>”，即可在新的标签页中找到我们服务器的控制台。如果你喜欢用VNC或者其他任何连接方式也没问题，这里我以Workbench为例。</p>
<img src="/d3af824b28d7/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.jpg" class="">

<img src="/d3af824b28d7/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0.jpg" class="">

<p>至此，我们的服务器配置问题结束了。</p>
<h3 id="下载Java和MC服务器端"><a href="#下载Java和MC服务器端" class="headerlink" title="下载Java和MC服务器端"></a>下载Java和MC服务器端</h3><h4 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h4><p>首先，我们给MC建立一个目录</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#返回根目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment">#建立mc1.13.2</span></span><br><span class="line"><span class="built_in">mkdir</span> mc1.13.2</span><br><span class="line"><span class="comment">#进入mc1.13.2</span></span><br><span class="line"><span class="built_in">cd</span> mc1.13.2</span><br></pre></td></tr></table></figure>

<h4 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h4><p>1.16及以下的版本使用Java8即可，而1.17及以上的版本则需要更新的Java。大家按照自己想玩的版本对应即可，我这里准备玩1.13.2所以使用Java8。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装Java</span></span><br><span class="line">sudo yum install java-1.8.0-openjdk</span><br><span class="line"><span class="comment">#安装过程中会出现询问，记得输入y以同意。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装完毕后可用以下代码验证成功安装</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>若出现以下版本，则代表安装完成。</p>
<img src="/d3af824b28d7/Java%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.jpg" class="">

<h4 id="下载MC服务端"><a href="#下载MC服务端" class="headerlink" title="下载MC服务端"></a>下载MC服务端</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载MC服务端</span></span><br><span class="line">sudo wget https://launcher.mojang.com/v1/objects/3737db93722a9e39eeada7c27e7aca28b144ffa7/server.jar</span><br></pre></td></tr></table></figure>

<p>这里我下载的是1.13.2的服务端，如果你想要玩其他版本，可以从<a href="https://mcversions.net/">这里</a>找到。</p>
<h4 id="下载screen"><a href="#下载screen" class="headerlink" title="下载screen"></a>下载screen</h4><p>screen是一个可以创建虚拟终端的插件，我们可以使用它做到24小时运行服务器。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装screen</span></span><br><span class="line">sudo yum install -y screen</span><br><span class="line"><span class="comment">#创建并打开一个虚拟终端，名叫“mc”</span></span><br><span class="line">screen -R mc</span><br></pre></td></tr></table></figure>

<p>此时你应该进入了一个新的界面，这说明你成功进入了虚拟终端。</p>
<p>同样我们使用以下命令组合进入mc1.13.2目录下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">cd</span> mc1.13.2</span><br></pre></td></tr></table></figure>



<h3 id="运行MC服务器端"><a href="#运行MC服务器端" class="headerlink" title="运行MC服务器端"></a>运行MC服务器端</h3><h4 id="运行服务器端"><a href="#运行服务器端" class="headerlink" title="运行服务器端"></a>运行服务器端</h4><p>至此，我们就可以准备运行我们的服务器啦。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Xmx是最大使用内存 Xms是最小使用内存 server.jar是文件名.后缀</span></span><br><span class="line">java -Xmx1000M -Xms256M -jar server.jar</span><br></pre></td></tr></table></figure>

<p>第一次没运行成功？没关系，往下看~</p>
<h4 id="修改相关文件"><a href="#修改相关文件" class="headerlink" title="修改相关文件"></a>修改相关文件</h4><p>第一次运行不会成功，会报需要先同意EULA。</p>
<p>这时我们进入Eula文件并修改</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入eula.txt文件</span></span><br><span class="line">vim eula.txt</span><br></pre></td></tr></table></figure>

<p>进入后，点击<code>i</code>键进入编辑模式，将<code>false</code>更改为<code>true</code>。</p>
<p>修改完毕后点击<code>ESC</code>退出编辑模式，并输入<code>:wq</code>退出文件。</p>
<p>如果你或者你的朋友们使用的不是正版mc登录，那么你还需要将正版验证关掉。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入server.properties</span></span><br><span class="line">vim server.properties</span><br></pre></td></tr></table></figure>

<p>找到其中的<code>online-mode</code>一行，并将<code>true</code>改为<code>false</code>即可。</p>
<h3 id="用HMCL登录MC服务器"><a href="#用HMCL登录MC服务器" class="headerlink" title="用HMCL登录MC服务器"></a>用HMCL登录MC服务器</h3><p>打开<a href="https://hmcl.huangyuhui.net/">HMCL</a>启动器，下载对应的版本并打开多人模式。</p>
<img src="/d3af824b28d7/MC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0.png" class="">

<p>服务器地址为<strong>你服务器的<code>公网ip:25565</code><strong>。特别要注意的一点是，冒号是英文的冒号，MC窗口内中英文冒号看起来一样，自己一定要注意，否则导致</strong>主机名解析失败</strong>。</p>
<h4 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h4><img src="/d3af824b28d7/%E6%88%90%E5%8A%9F.png" class="">

<h4 id="退出screen，完成24小时运行"><a href="#退出screen，完成24小时运行" class="headerlink" title="退出screen，完成24小时运行"></a>退出screen，完成24小时运行</h4><p>最后别忘了使用<code>Ctrl+a</code> 和 <code>d</code>退出screen，这样就可以24小时开启服务器不管啦。</p>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>我的世界</tag>
        <tag>MC</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>我和L</title>
    <url>/02063b73cdf0.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再次输入。或者向我询问密码。" data-whm="哈希校验错误。">
  <script id="hbeData" type="hbeData" data-hmacdigest="ad883b3706235e81e47200595be3fa843392f5287bc0d1ea2fa2085dcd0f47eb"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>需要密码</tag>
        <tag>情感</tag>
      </tags>
  </entry>
  <entry>
    <title>如何写一篇文章的“related work”部分</title>
    <url>/f2a7da94c8dc.html</url>
    <content><![CDATA[<h3 id="如何写一篇文章的“related-work”部分"><a href="#如何写一篇文章的“related-work”部分" class="headerlink" title="如何写一篇文章的“related work”部分"></a>如何写一篇文章的“related work”部分</h3>]]></content>
  </entry>
</search>
